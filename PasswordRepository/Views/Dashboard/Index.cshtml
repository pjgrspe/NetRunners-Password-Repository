@model PasswordRepository.Models.PasswordEntryModel
@using PasswordRepository.Helpers;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html lang="en">
<head>
    <title>Home</title>
    <link href="~/Style/StyleSheetButtonEditTrash.css" rel="stylesheet">
    <link href="~/Style/StyleSheetDashboard.css" rel="stylesheet">
</head>
<body>
    <!--Navbar-->
    @Html.Partial("_NavbarDashboard")

    <div id="outer">
        <!-- Modal -->
        <div class="modal fade" id="addbutton-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="ModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="ModalLabel">ADD NEW ITEM</h1>
                        <button type="button" class="btn-close btn-close-white" onclick="discardChangesADDITEM()"></button>
                    </div>
                    <!--Form-->
                    <div class="modal-body modal-xl" style="margin-top:-10px;">
                        @using (@Html.BeginForm("Entry", "Dashboard", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <div class="registration-form container d-flex justify-content-center" style="text-align:center;">
                                <div class="d-flex justify-content-center w-100">
                                    <div class="form-floating" style="margin-top: 10px; width: 90%;">
                                        @Html.TextBoxFor(Model => Model.textbox_PR_TITLE, new { @class = "form-control rounded-0 w-100", id = "floatingTitle", placeholder = "Title", required = "required" })
                                        @*<input type="text" maxlength="50" class="form-control rounded-0 w-100" id="floatingTitle" spellcheck="false" placeholder = "Title" required = "required">*@
                                        <label for="floatingTitle">Title</label>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-center w-100">
                                    <div class="form-floating" style="margin-top: 10px; width: 90%; ">
                                        @Html.TextBoxFor(Model => Model.textbox_PR_EMAIL, new { @class = "form-control rounded-0 w-100", id = "floatingEmail", type = "email", placeholder = "Email" })
                                        @*<input type="email" maxlength="50" class="form-control rounded-0 w-100" id="floatingEmail" spellcheck="false" placeholder = "Email">*@
                                        <label for="floatingEmail">Email</label>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-center w-100">
                                    <div class="form-floating" style="margin-top: 10px; width: 90%;">
                                        @Html.TextBoxFor(Model => Model.textbox_PR_USERNAME, new { @class = "form-control rounded-0 w-100", id = "floatingUsername", placeholder = "Username" })
                                        @*<input maxlength="50" class="form-control rounded-0 w-100" id="floatingUsername" spellcheck="false" placeholder = "Username">*@
                                        <label for="floatingUsername">Username</label>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-center w-100">
                                    <div class="form-floating" style="margin-top: 10px; width: 90%;">
                                        @Html.PasswordFor(Model => Model.textbox_PR_PASSWORD, new { @class = "form-control rounded-0 w-100", id = "floatingPassword-login", placeholder = "Password", required = "required" })
                                        @*<input type="password" maxlength="50" class="form-control rounded-0 w-100" id="floatingPassword-login" spellcheck="false" placeholder = "Password" required = "required">*@
                                        <label for="floatingPassword-login">Password</label>
                                        <span>
                                            <!--Eye icon-->
                                            <img src="~/Elements/eye.svg" id="eyeicon-login" />
                                        </span>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-center w-100">
                                    <div class="form-floating" style="margin-top: 10px; width: 90%;">
                                        @Html.TextBoxFor(Model => Model.textbox_PR_URL, new { @class = "form-control rounded-0 w-100", id = "floatingURL", placeholder = "URL" })
                                        @*<input maxlength="50" class="form-control rounded-0 w-100" id="floatingURL" spellcheck="false" placeholder = "URL">*@
                                        <label for="floatingURL">URL</label>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-center w-100">
                                    <div class="form-floating" style="margin-top: 10px; width: 90%; height: auto;">
                                        @Html.TextAreaFor(Model => Model.textbox_PR_NOTES, new { @class = "form-control rounded-0 w-100", rows = "10", id = "floatingNotes", placeholder = "Notes", style = "height:110px", maxlength = "500" })
                                        @*<textarea type="text" maxlength="1000" style = "height:110px" class="form-control rounded-0 w-100" id="floatingNotes" spellcheck="false" placeholder = "Notes"></textarea>*@
                                        <label for="floatingNotes">Notes</label>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer d-flex justify-content-center" style="margin-top:10px">
                                <div class="d-flex justify-content-center">
                                    <div class="d-flex justify-content-center col-5 mb-2 ">
                                        <button class="btn btn-outline-secondary rounded-0" aria-pressed="true" id="addmodalbtn">
                                            ADD +
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!--Content-->
        <section class="text-light p-5">
            <div class="container d-flex justify-content-center" id="maincontainer">
                <div class="justify-content-center" id="content">
                    <!--Title-->
                    <div class="d-flex justify-content-center col-12" id="title" style="display:block; white-space:nowrap; margin-left:auto; margin-right:auto;">
                        <h2 align="center">
                            / PASSWORD REPOSITORY /
                        </h2>
                    </div>
                    <!--TABLE-->
                    <div class="d-flex justify-content-center w-100" style="margin-top:20px">
                        <div class="row w-100" id="passrepotable">
                            <!--ITEMS-->
                            <div class="col-4" id="table-leftcolumn">
                                <!--Search bar-->
                                <div class="d-flex justify-content-center">
                                    <a style="width:95%">
                                        <div class="input-group" style="margin-top:10px;">
                                            <span class="input-group-text rounded-0" id="basic-addon1"><img id="searchicon" src="~/Elements/searchicon.png" /></span>
                                            <input type="text" class="form-control form-control-search rounded-0" placeholder="SEARCH" aria-label="Username" aria-describedby="basic-addon1" id="searchform">
                                        </div>
                                    </a>
                                </div>

                                <!-- Button trigger modal -->
                                <div class="d-flex justify-content-center">
                                    <button type="button" class="btn btn-outline-secondary rounded-0" data-bs-toggle="modal" data-bs-target="#addbutton-modal" id="additembtn" style="margin-top:10px;">
                                        ADD ITEM +
                                    </button>
                                </div>
                                <div class="list-group rounded-0 overflow-auto flipped scroller" id="list-tab" role="tablist" style="margin-top:10px; height:500px;">
                                    @{foreach (var PassEntry in Model.Passwords.Where(x => x.UID.Equals((int)Session["ID"]) && x.isTrashed.Equals(false) && x.isActive.Equals(true)))
                                        {
                                            <a class="list-group-item list-group-item-action" id="list-@PassEntry.PID-list" data-bs-toggle="list" href="#list-@PassEntry.PID" role="tab" aria-controls="list-@PassEntry.PID">@PassEntry.PR_TITLE</a>
                                        }
                                    }
                                </div>
                                <script>
                                    $(document).ready(function () {
                                        $("#searchform").on("keyup", function () {
                                            var value = $(this).val().toLowerCase();
                                            $(".list-group-item").filter(function () {
                                                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                                            });
                                        });

                                        checkListVisibility(); // Call the function on page load

                                        function checkListVisibility() {
                                            var listItems = $(".list-group-item");
                                            var listWelcome = $("#list-welcome");
                                            var deletebtn = document.getElementById('deleteallbtn')

                                            if (listItems.length > 0) {
                                                listWelcome.hide();
                                                deletebtn.classList.remove('disabled');
                                            } else {
                                                listWelcome.show();
                                                deletebtn.classList.add('disabled');
                                            }
                                        }
                                    });
                                </script>
                            </div>
                            <!--ITEM DETAILS-->
                            <div class="col-8" id="table-rightcolumn">
                                <div class="tab-content" id="nav-tabContent">
                                    <!--DISPLAY IF NO ITEMS-->
                                    <div class="show" id="list-welcome">
                                        <div class="container w-100">
                                            <!--DISPLAY DETAILS-->
                                            <div class="item-table w-100 table-form-title" style="margin-top:270px">
                                                <div class="tbl-details d-flex justify-content-center">
                                                    <h2 class="form-control-title" style="text-align:center; width:900px" id="Title-welcome">
                                                        ADD AN ITEM TO START
                                                        <p style="font-size:14px; color:gray">Click the add item button to save your details.</p>
                                                    </h2>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @{foreach (var PassEntry in Model.Passwords.Where(x => x.UID.Equals((int)Session["ID"]) && x.isTrashed.Equals(false) && x.isActive.Equals(true)))
                                        {
                                            //using (@Html.BeginForm("Index", "Login", FormMethod.Post)) { };
                                            var decryptedPassword = Encrypter.DecryptString(PassEntry.PR_PASSWORD);
                                            <!--PER ITEM DETAILS-->
                                            <div class="tab-pane show" id="list-@PassEntry.PID" role="tabpanel" aria-labelledby="list-@PassEntry.PID-list">
                                                <div class="container">
                                                    <!--DETAILS-->
                                                    <div class="mt-3 item-table w-100 table-form-title" style="margin-top:-30px">
                                                        <!--TITLE NAME-->
                                                        <div class="tbl-details">
                                                            <h2>
                                                                <input type="text" minlength="1" maxlength="20" readonly style="width:100%" class="form-control-title" id="Title-@PassEntry.PID.ToString()" value="@PassEntry.PR_TITLE" spellcheck="false" placeholder="Title">
                                                            </h2>
                                                        </div>
                                                        <!--USERNAME INPUT-->
                                                        <div class="mt-3 tbl-details" id="tbl-username-@PassEntry.PID.ToString()">
                                                            <div class="form-floating table-form">
                                                                <p style="margin-bottom:-2px;">Username</p>
                                                                <input type="text" maxlength="50" readonly class="form-control-plaintext readonly" style="width:100%" id="Username-@PassEntry.PID.ToString()" value="@PassEntry.PR_USERNAME" spellcheck="false">
                                                                <span>
                                                                    <!--CC icon-->
                                                                    <img src="~/Elements/copytoclipboard.svg" class="ccicon-@PassEntry.PID" id="cciconUsername-@PassEntry.PID.ToString()" />
                                                                </span>
                                                                <script type="text/javascript">
                                                                //disappear if input is null
                                                                window.addEventListener('load', function () {
                                                                    checkInputusername();
                                                                });

                                                                function checkInputusername() {
                                                                    const inputElement = document.getElementById('Username-@PassEntry.PID.ToString()');
                                                                    const tblDetail = document.getElementById('tbl-username-@PassEntry.PID.ToString()')

                                                                    // Check if the value is null or empty
                                                                    if (!inputElement.value.trim()) {
                                                                        tblDetail.style.display = 'none'; // Hide the input element
                                                                    } else {
                                                                        tblDetail.style.display = 'block'; // Show the input element
                                                                    }
                                                                }

                                                                //copy to clipboard function
                                                                function initializeCCIcon() {
                                                                    let ccicon = document.getElementById('cciconUsername-@PassEntry.PID.ToString()');
                                                                    var formdisplay = document.getElementById('Username-@PassEntry.PID.ToString()');

                                                                    // Make sure the elements are not null before accessing their properties
                                                                    if (ccicon && formdisplay) {

                                                                        ccicon.style.display = "none";

                                                                        formdisplay.addEventListener("mouseenter", function () {
                                                                            ccicon.style.display = "block";
                                                                            formdisplay.classlist.add("hover");
                                                                            //ccicon.classList.add = "hidden";

                                                                        });

                                                                        formdisplay.addEventListener("mouseleave", function () {
                                                                        const isTargetIcon = event.relatedTarget === ccicon || ccicon.contains(event.relatedTarget);
                                                                            if (!isTargetIcon) {
                                                                                ccicon.style.display = "none";
                                                                            }
                                                                        });

                                                                        ccicon.addEventListener("mouseenter", function () {
                                                                            formdisplay.classList.add("hover");
                                                                        });

                                                                        ccicon.addEventListener("mousedown", function (event) {
                                                                            event.preventDefault(); // prevent default action to avoid losing focus
                                                                            togglecc_table();
                                                                        });

                                                                         function togglecc_table() {
                                                                            var copyText = formdisplay

                                                                            // Copy the text inside the text field
                                                                            navigator.clipboard.writeText(copyText.value);

                                                                             // Alert the copied text
                                                                             /*alert("Copied the text: " + copyText.value);*/
                                                                             const Toast = Swal.mixin({
                                                                                 toast: true,
                                                                                 position: 'top',
                                                                                 showConfirmButton: false,
                                                                                 timer: 3000,
                                                                                 timerProgressBar: true,
                                                                                 didOpen: (toast) => {
                                                                                     toast.addEventListener('mouseenter', Swal.stopTimer)
                                                                                     toast.addEventListener('mouseleave', Swal.resumeTimer)
                                                                                 }
                                                                             })

                                                                             Toast.fire({
                                                                                 icon: 'success',
                                                                                 iconColor: '#70cc72',
                                                                                 title: 'Copied "Username"!',
                                                                                 background: '#1a1a1a',
                                                                             })
                                                                             ccicon.style.display = "none";
                                                                        }
                                                                    }
                                                                }
                                                                  // Call the function after the document has finished loading
                                                                window.addEventListener('load', initializeCCIcon);
                                                                </script>
                                                            </div>
                                                        </div>
                                                        <!--EMAIL INPUT-->
                                                        <div class="mt-3 tbl-details" id="tbl-email-@PassEntry.PID.ToString()">
                                                            <div class="form-floating table-form">
                                                                <p style="margin-bottom:-2px;">Email</p>
                                                                <input type="email" maxlength="50" readonly class="form-control-plaintext" style="width:100%" id="Email-@PassEntry.PID.ToString()" value="@PassEntry.PR_EMAIL" spellcheck="false">
                                                                <span>
                                                                    <!--CC icon-->
                                                                    <img src="~/Elements/copytoclipboard.svg" class="ccicon-@PassEntry.PID" id="cciconEmail-@PassEntry.PID" />
                                                                </span>
                                                                <script type="text/javascript">
                                                                //disappear if input is null
                                                                window.addEventListener('load', function () {
                                                                    checkInputemail();
                                                                });

                                                                function checkInputemail() {
                                                                    const inputElement = document.getElementById('Email-@PassEntry.PID.ToString()');
                                                                    const tblDetail = document.getElementById('tbl-email-@PassEntry.PID.ToString()')

                                                                    // Check if the value is null or empty
                                                                    if (!inputElement.value.trim()) {
                                                                        tblDetail.style.display = 'none'; // Hide the input element
                                                                    } else {
                                                                        tblDetail.style.display = 'block'; // Show the input element
                                                                    }
                                                                }

                                                                //copy to clipboard function
                                                                function initializeCCIcon() {
                                                                    let ccicon = document.getElementById('cciconEmail-@PassEntry.PID.ToString()');
                                                                    var formdisplay = document.getElementById('Email-@PassEntry.PID.ToString()');

                                                                    // Make sure the elements are not null before accessing their properties
                                                                    if (ccicon && formdisplay) {

                                                                        ccicon.style.display = "none";

                                                                        formdisplay.addEventListener("mouseenter", function () {
                                                                            ccicon.style.display = "block";
                                                                            formdisplay.classlist.add("hover");
                                                                            //ccicon.classList.add = "hidden";

                                                                        });

                                                                        formdisplay.addEventListener("mouseleave", function () {
                                                                        const isTargetIcon = event.relatedTarget === ccicon || ccicon.contains(event.relatedTarget);
                                                                            if (!isTargetIcon) {
                                                                                ccicon.style.display = "none";
                                                                            }
                                                                        });

                                                                        ccicon.addEventListener("mouseenter", function () {
                                                                            formdisplay.classList.add("hover");
                                                                        });

                                                                        ccicon.addEventListener("mousedown", function (event) {
                                                                            event.preventDefault(); // prevent default action to avoid losing focus
                                                                            togglecc_table();
                                                                        });

                                                                         function togglecc_table() {
                                                                            var copyText = formdisplay

                                                                            // Copy the text inside the text field
                                                                            navigator.clipboard.writeText(copyText.value);

                                                                             // Alert the copied text
                                                                             /*alert("Copied the text: " + copyText.value);*/
                                                                             const Toast = Swal.mixin({
                                                                                 toast: true,
                                                                                 position: 'top',
                                                                                 showConfirmButton: false,
                                                                                 timer: 3000,
                                                                                 timerProgressBar: true,
                                                                                 didOpen: (toast) => {
                                                                                     toast.addEventListener('mouseenter', Swal.stopTimer)
                                                                                     toast.addEventListener('mouseleave', Swal.resumeTimer)
                                                                                 }
                                                                             })

                                                                             Toast.fire({
                                                                                 icon: 'success',
                                                                                 iconColor: '#70cc72',
                                                                                 title: 'Copied "Email"!',
                                                                                 background: '#1a1a1a',
                                                                             })
                                                                             ccicon.style.display = "none";
                                                                        }
                                                                    }
                                                                }
                                                                  // Call the function after the document has finished loading
                                                                  window.addEventListener('load', initializeCCIcon);
                                                                </script>
                                                            </div>
                                                        </div>
                                                        <!--PASSWORD INPUT-->
                                                        <div class="mt-3 tbl-details" id="tbl-password-@PassEntry.PID.ToString()">
                                                            <div class="form-floating table-form">
                                                                <p style="margin-bottom:-2px;">Password</p>
                                                                <input type="password" maxlength="50" readonly class="form-control-plaintext" style="width:100%" id="Password-@PassEntry.PID.ToString()" value="@decryptedPassword" spellcheck="false">
                                                                <span>
                                                                    <!--Eye and CC icon-->
                                                                    <img src="~/Elements/eye-white.svg" class="eyeiconpassword-@PassEntry.PID" id="eyeiconPassword-@PassEntry.PID" />
                                                                    <img src="~/Elements/copytoclipboard.svg" class="cciconpassword-@PassEntry.PID" id="cciconPassword-@PassEntry.PID" />
                                                                </span>
                                                                <script type="text/javascript">
                                                                //disappear if input is null
                                                                window.addEventListener('load', function () {
                                                                    checkInputpassword();
                                                                });

                                                                function checkInputpassword() {
                                                                    const inputElement = document.getElementById('Password-@PassEntry.PID.ToString()');
                                                                    const tblDetail = document.getElementById('tbl-password-@PassEntry.PID.ToString()')

                                                                    // Check if the value is null or empty
                                                                    if (!inputElement.value.trim()) {
                                                                        tblDetail.style.display = 'none'; // Hide the input element
                                                                    } else {
                                                                        tblDetail.style.display = 'block'; // Show the input element
                                                                    }
                                                                }
                                                                //copy to clipboard and show password function
                                                                function initializeCCIcon() {
                                                                    let eyeicontbl = document.getElementById('eyeiconPassword-@PassEntry.PID.ToString()');
                                                                    let ccicon = document.getElementById('cciconPassword-@PassEntry.PID.ToString()');
                                                                    var formdisplay = document.getElementById('Password-@PassEntry.PID.ToString()');

                                                                    // Make sure the elements are not null before accessing their properties
                                                                    if (ccicon && formdisplay && eyeicontbl) {

                                                                    eyeicontbl.style.display = "block";
                                                                    ccicon.style.display = "none";

                                                                    formdisplay.addEventListener("mouseenter", function () {
                                                                        ccicon.style.display = "block";
                                                                        formdisplay.classList.add("hover");
                                                                    });

                                                                    formdisplay.addEventListener("mouseleave", function () {
                                                                        const isTargetIcon = event.relatedTarget === ccicon || ccicon.contains(event.relatedTarget);

                                                                        if (!isTargetIcon) {
                                                                            ccicon.style.display = "none";
                                                                        }
                                                                    });

                                                                    eyeicontbl.addEventListener("mouseenter", function () {
                                                                        formdisplay.classList.add("hover");
                                                                    });

                                                                    ccicon.addEventListener("mouseenter", function () {
                                                                        formdisplay.classList.add("hover");
                                                                    });

                                                                    eyeicontbl.addEventListener("mousedown", function (event) {
                                                                        event.preventDefault(); // prevent default action to avoid losing focus
                                                                        toggleshowPW_table();
                                                                    });

                                                                    ccicon.addEventListener("mousedown", function (event) {
                                                                        event.preventDefault(); // prevent default action to avoid losing focus
                                                                        togglecc_table();
                                                                    });

                                                                    function togglecc_table() {
                                                                        var copyText = formdisplay

                                                                        // Copy the text inside the text field
                                                                        navigator.clipboard.writeText(copyText.value);

                                                                        // Alert the copied text
                                                                        /*alert("Copied the text: " + copyText.value);*/
                                                                        const Toast = Swal.mixin({
                                                                            toast: true,
                                                                            position: 'top',
                                                                            showConfirmButton: false,
                                                                            timer: 3000,
                                                                            timerProgressBar: true,
                                                                            didOpen: (toast) => {
                                                                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                                                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                                                                            }
                                                                        })

                                                                        Toast.fire({
                                                                            icon: 'success',
                                                                            iconColor: '#70cc72',
                                                                            title: 'Copied "Password"!',
                                                                            background: '#1a1a1a',
                                                                        })
                                                                        ccicon.style.display = "none";
                                                                    }

                                                                    function toggleshowPW_table() {
                                                                        var show = document.getElementById('Password-@PassEntry.PID.ToString()');
                                                                        if (show.type == 'password') {
                                                                            show.type = 'text';
                                                                            eyeicontbl.src = "/Elements/eye-slash-white.svg"
                                                                        }
                                                                        else {
                                                                            show.type = 'password'
                                                                            eyeicontbl.src = "/Elements/eye-white.svg"

                                                                        }
                                                                        show.focus();
                                                                        }
                                                                    }

                                                                }
                                                                // Call the function after the document has finished loading
                                                                window.addEventListener('load', initializeCCIcon);
                                                                </script>
                                                            </div>
                                                        </div>
                                                        <!--URL INPUT-->
                                                        <div class="mt-3 tbl-details" id="tbl-url-@PassEntry.PID.ToString()">
                                                            <div class="form-floating table-form">
                                                                <p style="margin-bottom:-2px;">URL</p>
                                                                <input type="text" maxlength="50" readonly class="form-control-plaintext" style="width:100%" id="URL-@PassEntry.PID.ToString()" value="@PassEntry.PR_URL" spellcheck="false">
                                                                <span>
                                                                    <!--CC icon-->
                                                                    <img src="~/Elements/copytoclipboard.svg" class="ccicon-@PassEntry.PID" id="cciconURL-@PassEntry.PID" />
                                                                </span>
                                                                <script type="text/javascript">
                                                                //disappear if input is null
                                                                window.addEventListener('load', function () {
                                                                    checkInputURL();
                                                                });

                                                                function checkInputURL() {
                                                                    const inputElement = document.getElementById('URL-@PassEntry.PID.ToString()');
                                                                    const tblDetail = document.getElementById('tbl-url-@PassEntry.PID.ToString()')

                                                                    // Check if the value is null or empty
                                                                    if (!inputElement.value.trim()) {
                                                                        tblDetail.style.display = 'none'; // Hide the input element
                                                                    } else {
                                                                        tblDetail.style.display = 'block'; // Show the input element
                                                                    }
                                                                }

                                                                //copy to clipboard function
                                                                function initializeCCIcon() {
                                                                    let ccicon = document.getElementById('cciconURL-@PassEntry.PID.ToString()');
                                                                    var formdisplay = document.getElementById('URL-@PassEntry.PID.ToString()');

                                                                    // Make sure the elements are not null before accessing their properties
                                                                    if (ccicon && formdisplay) {

                                                                        ccicon.style.display = "none";

                                                                        formdisplay.addEventListener("mouseenter", function () {
                                                                            ccicon.style.display = "block";
                                                                            formdisplay.classlist.add("hover");
                                                                            //ccicon.classList.add = "hidden";

                                                                        });

                                                                        formdisplay.addEventListener("mouseleave", function () {
                                                                        const isTargetIcon = event.relatedTarget === ccicon || ccicon.contains(event.relatedTarget);
                                                                            if (!isTargetIcon) {
                                                                                ccicon.style.display = "none";
                                                                            }
                                                                        });

                                                                        ccicon.addEventListener("mouseenter", function () {
                                                                            formdisplay.classList.add("hover");
                                                                        });

                                                                        ccicon.addEventListener("mousedown", function (event) {
                                                                            event.preventDefault(); // prevent default action to avoid losing focus
                                                                            togglecc_table();
                                                                        });

                                                                        function togglecc_table() {
                                                                            var copyText = formdisplay

                                                                            // Copy the text inside the text field
                                                                            navigator.clipboard.writeText(copyText.value);

                                                                            // Alert the copied text
                                                                            /*alert("Copied the text: " + copyText.value);*/
                                                                            const Toast = Swal.mixin({
                                                                                toast: true,
                                                                                position: 'top',
                                                                                showConfirmButton: false,
                                                                                timer: 3000,
                                                                                timerProgressBar: true,
                                                                                didOpen: (toast) => {
                                                                                    toast.addEventListener('mouseenter', Swal.stopTimer)
                                                                                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                                                                                }
                                                                            })

                                                                            Toast.fire({
                                                                                icon: 'success',
                                                                                iconColor: '#70cc72',
                                                                                title: 'Copied "URL"!',
                                                                                background: '#1a1a1a',
                                                                            })
                                                                            ccicon.style.display = "none";
                                                                        }
                                                                    }
                                                                }
                                                                  // Call the function after the document has finished loading
                                                                  window.addEventListener('load', initializeCCIcon);
                                                                </script>
                                                            </div>
                                                        </div>
                                                        <!--NOTES INPUT-->
                                                        <div class="mt-3 tbl-details" id="tbl-notes-@PassEntry.PID.ToString()">
                                                            <div class="form-floating table-form">
                                                                <p style="margin-bottom:-2px;">Notes</p>
                                                                <textarea type="text" maxlength="1000" style="text-align: left; height: 100px; width: 100%" readonly class="form-control-plaintext form-control-notes" id=Notes-@PassEntry.PID.ToString() spellcheck="false">@PassEntry.PR_NOTES</textarea>
                                                                <span>
                                                                    <!--CC icon-->
                                                                    <img src="~/Elements/copytoclipboard.svg" class="cciconnotes-@PassEntry.PID" id="cciconNotes-@PassEntry.PID" />
                                                                </span>
                                                                <script type="text/javascript">
                                                                //disappear if input is null
                                                                window.addEventListener('load', function () {
                                                                    checkInputnotes();
                                                                });

                                                                function checkInputnotes() {
                                                                    const inputElement = document.getElementById('Notes-@PassEntry.PID.ToString()');
                                                                    const tblDetail = document.getElementById('tbl-notes-@PassEntry.PID.ToString()')

                                                                    // Check if the value is null or empty
                                                                    if (!inputElement.value.trim()) {
                                                                        tblDetail.style.display = 'none'; // Hide the input element
                                                                    } else {
                                                                        tblDetail.style.display = 'block'; // Show the input element
                                                                    }
                                                                }

                                                                //copy to clipboard function
                                                                function initializeCCIcon() {
                                                                    let ccicon = document.getElementById('cciconNotes-@PassEntry.PID.ToString()');
                                                                    var formdisplay = document.getElementById('Notes-@PassEntry.PID.ToString()');

                                                                    // Make sure the elements are not null before accessing their properties
                                                                    if (ccicon && formdisplay) {

                                                                        ccicon.style.display = "none";

                                                                        formdisplay.addEventListener("mouseenter", function () {
                                                                            ccicon.style.display = "block";
                                                                            formdisplay.classlist.add("hover");
                                                                            //ccicon.classList.add = "hidden";

                                                                        });

                                                                        formdisplay.addEventListener("mouseleave", function () {
                                                                        const isTargetIcon = event.relatedTarget === ccicon || ccicon.contains(event.relatedTarget);
                                                                            if (!isTargetIcon) {
                                                                                ccicon.style.display = "none";
                                                                            }
                                                                        });

                                                                        ccicon.addEventListener("mouseenter", function () {
                                                                            formdisplay.classList.add("hover");
                                                                        });

                                                                        ccicon.addEventListener("mousedown", function (event) {
                                                                            event.preventDefault(); // prevent default action to avoid losing focus
                                                                            togglecc_table();
                                                                        });

                                                                         function togglecc_table() {
                                                                            var copyText = formdisplay

                                                                            // Copy the text inside the text field
                                                                            navigator.clipboard.writeText(copyText.value);

                                                                            // Alert the copied text
                                                                             /*alert("Copied the text: " + copyText.value);*/
                                                                             const Toast = Swal.mixin({
                                                                                 toast: true,
                                                                                 position: 'top',
                                                                                 showConfirmButton: false,
                                                                                 timer: 3000,
                                                                                 timerProgressBar: true,
                                                                                 didOpen: (toast) => {
                                                                                     toast.addEventListener('mouseenter', Swal.stopTimer)
                                                                                     toast.addEventListener('mouseleave', Swal.resumeTimer)
                                                                                 }
                                                                             })

                                                                             Toast.fire({
                                                                                 icon: 'success',
                                                                                 iconColor: '#70cc72',
                                                                                 title: 'Copied "Notes"!',
                                                                                 background: '#1a1a1a',
                                                                             })
                                                                            ccicon.style.display = "none";
                                                                        }
                                                                    }
                                                                }
                                                                  // Call the function after the document has finished loading
                                                                  window.addEventListener('load', initializeCCIcon);
                                                                </script>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!--DATE INPUT-->
                                                    <div class="col-12 d-flex justify-content-center" style="display: none;">
                                                        <div class="mt-4" style="color: gray; margin-right: 60px;" id="dateinfo-@PassEntry.PID">
                                                            <p>Created on @PassEntry.ENTRY_CREATED</p>
                                                        </div>
                                                    </div>
                                                    <!--HIDDEN CONFIRM AND CANCEL BTNS-->
                                                    <div class="col-11 d-flex justify-content-center">
                                                        <div class="mt-4 mb-4" style="color:gray; display:none;" id="editbtns-@PassEntry.PID">
                                                            <button class="btn btn-outline-secondary rounded-0" onclick="updateEntry('@PassEntry.PID', '@PassEntry.PID.ToString()', '@PassEntry.PR_TITLE')" style="margin-right:8px;" aria-pressed="true" id="editacceptbtn">
                                                                CONFIRM
                                                            </button>
                                                            <button class="btn btn-outline-secondary rounded-0" onclick="cancelEdit('@PassEntry.PID','@PassEntry.PR_TITLE','@PassEntry.PR_USERNAME','@PassEntry.PR_EMAIL','@decryptedPassword','@PassEntry.PR_URL','@PassEntry.PR_NOTES')" aria-pressed="true" id="editcancelbtn">
                                                                CANCEL
                                                            </button>
                                                        </div>
                                                        <template id="my-template">
                                                            <swal-title>
                                                                Save changes to "Untitled 1" before closing?
                                                            </swal-title>
                                                            <swal-icon type="warning" color="red"></swal-icon>
                                                            <swal-button type="confirm">
                                                                Save As
                                                            </swal-button>
                                                            <swal-button type="cancel">
                                                                Cancel
                                                            </swal-button>
                                                            <swal-button type="deny">
                                                                Close without Saving
                                                            </swal-button>
                                                            <swal-param name="allowEscapeKey" value="false" />
                                                            <swal-param name="customClass"
                                                                        value='{ "popup": "my-popup" }' />
                                                            <swal-function-param name="didOpen"
                                                                                 value="popup => console.log(popup)" />
                                                        </template>
                                                    </div>
                                                </div>
                                                <nav class="menu" id="edit-menu-@PassEntry.PID">
                                                    <input type="checkbox" href="#" class="menu-open" name="menu-open" id="menu-open-@PassEntry.PID.ToString()" />
                                                    <label class="menu-open-button" for="menu-open-@PassEntry.PID.ToString()">
                                                        <span class="lines line-1"></span>
                                                        <span class="lines line-2"></span>
                                                        <span class="lines line-3"></span>
                                                    </label>
                                                    <a class="menu-item red" onclick="deleteEntry('@PassEntry.PID','@PassEntry.PR_TITLE')"> <i class="fa fa-trash"></i> </a>
                                                    <a class="menu-item green" onclick="toggleEdit('@PassEntry.PID')"> <i class="fa fa-pen"></i> </a>
                                                </nav>
                                            </div>
                                        }
                                    }
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</body>
</html>

<script type="text/javascript">
    function discardChangesADDITEM() {
        Swal.fire({
            title: 'Cancel changes?',
            text: 'This will dismiss all changes.',
            icon: 'error',
            iconColor: '#c40f2d',
            background: '#1a1a1a',
            showCancelButton: true,
            confirmButtonColor: '#70cc72',
            cancelButtonColor: '#fe4365',
            confirmButtonText: 'Confirm',
            cancelButtonText: 'Back'
        }).then((result) => {
            if (result.isConfirmed) {
                // Handle confirmed action
                $('#addbutton-modal').modal('hide')
            }
        });
    }

    function cancelEdit(PID, Title, Username, Email, Password, URL, Notes) {
        //Confirmation message before cancelling edit
        Swal.fire({
            title: 'Cancel changes?',
            text: "This will dismiss all changes.",
            icon: 'error',
            iconColor: '#c40f2d',
            background: '#1a1a1a',
            showCancelButton: true,
            confirmButtonColor: '#70cc72',
            cancelButtonColor: '#fe4365',
            confirmButtonText: 'Confirm',
            cancelButtonText: 'Back'
        }).then((result) => {
            if (result.isConfirmed) {
                checkInputemail();
                checkInputusername();
                checkInputpassword();
                checkInputURL();
                checkInputnotes();
                toggleEdit(PID);
                resetform(PID, Title, Username, Email, Password, URL, Notes);
            }
        })
        
    }

    function resetform(PID, Title, Username, Email, Password, URL, Notes) {
        document.getElementById('Title-' + PID).value = Title;
        document.getElementById('Username-' + PID).value = Username;
        document.getElementById('Email-' + PID).value = Email;
        document.getElementById('Password-' + PID).value = Password;
        document.getElementById('URL-' + PID).value = URL;
        document.getElementById('Notes-' + PID).value = Notes;
    }

    function toggleEdit(PID) {
        var itemTITLE = document.getElementById('Title-' + PID);
        var itemUN = document.getElementById('Username-' + PID);
        var itemPW = document.getElementById('Password-' + PID);
        var itemEMAIL = document.getElementById('Email-' + PID);
        var itemURL = document.getElementById('URL-' + PID);
        var itemNOTES = document.getElementById('Notes-' + PID);
        var editicon = document.getElementById('edit-menu-' + PID);
        var editbtns = document.getElementById('editbtns-' + PID);
        var dateinfo = document.getElementById('dateinfo-' + PID);

        //tbldetails
        const UNtblDetail = document.getElementById('tbl-username-' + PID)
        const PWtblDetail = document.getElementById('tbl-password-' + PID)
        const EMAILtblDetail = document.getElementById('tbl-email-' + PID)
        const URLtblDetail = document.getElementById('tbl-url-' + PID)
        const NOTEStblDetail = document.getElementById('tbl-notes-' + PID)

        if (itemTITLE.value != null) {
            //toggle
            if (itemUN.classList == 'form-control-plaintext readonly') {
                //REMOVE MENU ICONS
                editicon.style.display = "none";
                dateinfo.style.display = "none";
                //ADD CONFIRM AND CANCEL BUTTONS
                editbtns.style.display = "block";
                //ITEM TITLE
                itemTITLE.readOnly = false;
                itemTITLE.className = "form-control-edit";
                //ITEM UN
                itemUN.readOnly = false;
                itemUN.className = "form-control-edit";
                UNtblDetail.style.display = "block";
                //ITEM PW
                itemPW.readOnly = false;
                itemPW.className = "form-control-edit";
                itemPW.type = 'password';
                PWtblDetail.style.display = "block";
                //ITEM EMAIL
                itemEMAIL.readOnly = false;
                itemEMAIL.className = "form-control-edit";
                EMAILtblDetail.style.display = "block";
                //ITEM URL
                itemURL.readOnly = false;
                itemURL.className = "form-control-edit";
                URLtblDetail.style.display = "block";
                //ITEM NOTES
                itemNOTES.readOnly = false;
                itemNOTES.className = "form-control-notes-edit form-control-edit";
                NOTEStblDetail.style.display = "block";
            }
            else {
                //ADD MENU ICONS
                editicon.style.display = "block";
                dateinfo.style.display = "block";
                //REMOVE CONFIRM AND CANCEL BUTTONS
                editbtns.style.display = "none";
                //ITEM TITLE
                itemTITLE.readOnly = true;
                itemTITLE.className = "form-control-plaintext form-control-title";
                //ITEM UN
                itemUN.readOnly = true;
                itemUN.className = "form-control-plaintext readonly";
                //ITEM PW
                itemPW.readOnly = true;
                itemPW.className = "form-control-plaintext";
                itemPW.type = 'password';
                //ITEM EMAIL
                itemEMAIL.readOnly = true;
                itemEMAIL.className = "form-control-plaintext";
                //itemEMAIL.value = Email;
                //ITEM URL
                itemURL.readOnly = true;
                itemURL.className = "form-control-plaintext";
                //ITEM NOTES
                itemNOTES.readOnly = true;
                itemNOTES.className = "form-control-plaintext form-control-notes";
            }
        }
        else {
            Swal.fire({
                position: 'top',
                icon: 'error',
                iconColor: '#c40f2d',
                background: '#1a1a1a',
                title: 'Title is required!',
                showConfirmButton: false,
                timer: 2500
            })
        }

    }
</script>
<!--LUIS-->
<script type="text/javascript">

    //Function for deleting given entry
    function deleteEntry(passwordID, title) {
        //Confirmation message before deleting entry
        Swal.fire({
            title: 'Delete item?',
            text: "This will place the item in the trash.",
            icon: 'warning',
            iconColor: '#c40f2d',
            background: '#1a1a1a',
            showCancelButton: true,
            confirmButtonColor: '#70cc72',
            cancelButtonColor: '#fe4365',
            confirmButtonText: 'Confirm'
        }).then((result) => {
            if (result.isConfirmed) {
                //Packages the received variable
                var data = {
                    passwordID: passwordID
                }

                //Ajax function to prepare data to be sent to the controller
                $.ajax({
                    type: "POST",
                    url: "/Dashboard/DeleteEntry",
                    dataType: "JSON",
                    data: JSON.stringify(data),
                    contentType: 'application/json; charset=utf8',
                    success: function () {

                    },
                    error: function () {
                        alert("An error occurred (Javascript)")
                    }
                })
                Swal.fire({
                    position: 'center',
                    icon: 'success',
                    background: '#1a1a1a',
                    iconColor: '#70cc72',
                    title: '"' + title + '" successfuly deleted!',
                    showConfirmButton: false,
                    timer: 2500
                })
                    .then(function () {
                        location.reload(true);
                    }
                    )
            }
        })
    }

    //Function for updating given entry

    function updateEntry(passwordID, passwordIDstring, title) {

        var itemTITLE = document.getElementById('Title-' + passwordID);

        //Sets variables to corresponding textboxes
        var pwID = passwordID;
        var pwTitle = $('#Title-' + passwordIDstring).val();
        var pwEmail = $('#Email-' + passwordIDstring).val();
        var pwUname = $('#Username-' + passwordIDstring).val();
        var pwPassword = $('#Password-' + passwordIDstring).val();
        var pwUrl = $('#URL-' + passwordIDstring).val();
        var pwNotes = $('#Notes-' + passwordIDstring).val()

        //Packages the variables
        var data = {
            passwordID: pwID,
            passwordTitle: pwTitle,
            passwordEmail: pwEmail,
            passwordUname: pwUname,
            passwordPassword: pwPassword,
            passwordURL: pwUrl,
            passwordNotes: pwNotes
        }

        if (!itemTITLE.value.trim()) {
            //error alert
            Swal.fire({
                position: 'center',
                icon: 'error',
                iconColor: '#c40f2d',
                background: '#1a1a1a',
                title: 'Title is required!',
                showConfirmButton: false,
                timer: 2500
            })
        }
        else {
            //Confirmation message before updating entry
            Swal.fire({
                title: 'Update item?',
                text: "This will update the item.",
                icon: 'question',
                iconColor: '#2973b9',
                background: '#1a1a1a',
                showCancelButton: true,
                confirmButtonColor: '#70cc72',
                cancelButtonColor: '#fe4365',
                confirmButtonText: 'Confirm'
            }).then((result) => {
                if (result.isConfirmed) {
                    //Ajax function to prepare data to be sent to the controller
                    $.ajax({
                        type: "POST",
                        url: "/Dashboard/UpdateEntry",
                        dataType: "JSON",
                        data: JSON.stringify(data),
                        contentType: 'application/json; charset=utf8',
                        success: function () {

                        },
                        error: function () {
                            alert("An error occurred")
                        }
                    })
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        background: '#1a1a1a',
                        iconColor: '#70cc72',
                        title: '"' + title + '" successfuly updated!',
                        showConfirmButton: false,
                        timer: 2500
                    })
                        .then(function () {
                            location.reload(true);
                        }
                        )
                }
            })
        }
    }
</script>

<!-- Modal-->
<div class="modal fade" id="detailsbutton-modal" tabindex="-1" aria-labelledby="ModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <!--Form-->
            <div class="modal-body modal-xl">
                <div class="d-flex justify-content-center w-100 mt-2">
                    <h5 style="color:white; font-family:'JetBrains Mono'">Enter your password to proceed.</h5>
                </div>
                <div class="d-flex justify-content-center w-100">
                    <div class="form-floating" style="margin-top: 10px; width: 90%;">
                        @*@Html.PasswordFor(Model => Model.textbox_PR_PASSWORD, new { @class = "form-control rounded-0 w-100", id = "floatingPassword-UserDetails", placeholder = "Password", required = "required" })*@
                        <input type="password" maxlength="50" class="form-control rounded-0 w-100" id="floatingPassword-UserDetails" spellcheck="false" placeholder="Password" required="required">
                        <label for="floatingPassword-UserDetails">Password</label>
                        <span>
                            <!--Eye icon-->
                            <img src="~/Elements/eye.svg" id="eyeicon-UserDetails" />
                        </span>
                        <script type="text/javascript">
                            //UserDetails MODAL SHOW PASSWORD
                            let eyeiconudetails = document.getElementById('eyeicon-UserDetails');
                            var formudetails = document.getElementById('floatingPassword-UserDetails');

                            eyeiconudetails.style.display = "none";

                            formudetails.addEventListener("focusin", function () {
                                eyeiconudetails.style.display = "block";
                            });

                            formudetails.addEventListener("focusout", function () {
                                if (Event.relatedTarget !== eyeiconudetails) {
                                    eyeiconudetails.style.display = "none";
                                }
                            });

                            eyeiconudetails.addEventListener("mousedown", function (event) {
                                event.preventDefault(); // prevent default action to avoid losing focus
                                togglePWUserDetails();
                            });

                            function togglePWUserDetails() {
                                var show = document.getElementById('floatingPassword-UserDetails');
                                if (show.type == 'password') {
                                    show.type = 'text';
                                    eyeiconudetails.src = "/Elements/eye-slash.svg"
                                }
                                else {
                                    show.type = 'password'
                                    eyeiconudetails.src = "/Elements/eye.svg"
                                }
                                show.focus();
                            }
                        </script>
                    </div>
                </div>
                <div class="modal-footer d-flex justify-content-center" style="margin-top:10px">
                    <div class="d-flex justify-content-center">
                        <div class="d-flex justify-content-center col-5">
                            <button class="btn btn-outline-secondary rounded-0" id="editmodalbtn" onclick="">
                                ENTER →
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>