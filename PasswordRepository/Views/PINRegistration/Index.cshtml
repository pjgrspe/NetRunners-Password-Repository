@model PasswordRepository.Models.LoginModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<!DOCTYPE html>

<html lang="en">
<head>
    <title>ICELock Registration</title>
    <link href="~/Style/StyleSheetPINInterface.css" rel="stylesheet">
    <link href="~/Style/StyleSheetRangeInput.css" rel="stylesheet">
</head>
<body>
    @Html.Partial("_LoadingPage")
    <!--Navbar-->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container" id="navcontainer">
            <!--Navbar Logo-->
            <a href="/Home/Index" class="navbar-brand">
                <img src="~/Elements/ICElogo200pixel.png" width="150" height="67" alt="">
            </a>
            <!--Navbar Hamburger Menu-->
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navmenu">
                <span class="navbar-toggler-icon"></span>
            </button>
            <!--Navbar Items-->
            <div class="collapse navbar-collapse" id="navmenu">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item" id="navlogin">
                        <a href="@Url.Action("LogOut", "Login")" type="button" class="rounded-0 btn btn-outline-secondary" id="loginbtn">LOGOUT</a>
                    </li>
                </ul>
            </div>

        </div>
    </nav>
    <!--Viewbag-->
    @{
        if (ViewBag.ErrorPIN != null)
        {
            <script>
                Swal.fire({
                    position: 'top',
                    icon: 'error',
                    iconColor: '#c40f2d',
                    background: '#1a1a1a',
                    title: '@ViewBag.ErrorPIN',
                    showConfirmButton: false,
                    timer: 2500
                })
            </script>
        }
    }
    <div id="outer">
        <!--Content-->
        <section class="text-light p-5 d-flex justify-content-center">
            <div class="container d-flex justify-content-center" id="maincontainer" style="margin-top:30px;">
                <div class="justify-content-center" id="content">
                    <!--Title-->
                    <div class="d-flex justify-content-center" id="title" style="display:block; white-space:nowrap; margin-left:auto; margin-right:auto;">
                        <h1 align="center">
                            / ICELock<span class="trademark">™</span> /
                        </h1>
                    </div>
                    <p align="center" style="font-size:20px;">
                        Setup your PIN.
                    </p>
                    <!--Form-->
                    <div class="registration-form container d-flex justify-content-center" style="text-align:center;">
                        <div class="d-flex justify-content-center w-100">
                            <div class="form-floating" style="margin-top: 10px; width: 350px;">
                                <input type="password" minlenght="4" maxlength="16" class="form-control rounded-0 w-100" placeholder="PIN" style="margin:auto" required="required" id="floatingPIN" onkeypress="return isNumberKey(event)">
                                <label for="floatingPIN">PIN</label>
                                <span>
                                    <img src="~/Elements/eye.svg" id="eyeicon-pin" />
                                </span>
                            </div>
                        </div>
                        <div class="d-flex justify-content-center w-100">
                            <div class="form-floating" style="margin-top: 10px; width: 350px;">
                                <input type="password" minlenght="4" maxlength="16" class="form-control rounded-0 w-100" placeholder="Repeat PIN" style="margin:auto" required="required" id="floatingREPEATPIN" onkeypress="return isNumberKey(event)">
                                <label for="floatingREPEATPIN">Repeat PIN</label>
                            </div>
                        </div>
                        <script type="text/javascript">
                            //ALLOW NUMBERS FOR INPUT ONLY
                            function isNumberKey(evt) {
                                var charCode = (evt.which) ? evt.which : evt.keyCode
                                if (charCode > 31 && (charCode < 48 || charCode > 57))
                                    return false;
                                return true;
                            }

                            //Show PIN functionality
                            let PINeyeicon = document.getElementById('eyeicon-pin');
                            var PINform = document.getElementById('floatingPIN');
                            var rePINform = document.getElementById('floatingREPEATPIN');

                            PINeyeicon.style.display = "none";

                            PINform.addEventListener("focusin", function () {
                                PINeyeicon.style.display = "block";
                            });

                            rePINform.addEventListener("focusin", function () {
                                PINeyeicon.style.display = "block";
                            });

                            PINform.addEventListener("focusout", function () {
                                if (Event.relatedTarget !== PINeyeicon) {
                                    PINeyeicon.style.display = "none";
                                }
                            });

                            rePINform.addEventListener("focusout", function () {
                                if (Event.relatedTarget !== PINeyeicon) {
                                    PINeyeicon.style.display = "none";
                                }
                            });

                            PINeyeicon.addEventListener("mousedown", function (event) {
                                event.preventDefault(); // prevent default action to avoid losing focus
                                toggleShowPIN();
                            });

                            function toggleShowPIN() {
                                var show = document.getElementById('floatingPIN');
                                var show2 = document.getElementById('floatingREPEATPIN');
                                if (show.type == 'password') {
                                    show.type = 'text';
                                    show2.type = 'text';
                                    PINeyeicon.src = "/Elements/eye-slash.svg"
                                }
                                else {
                                    show.type = 'password'
                                    show2.type = 'password'
                                    PINeyeicon.src = "/Elements/eye.svg"
                                }
                                show.focus();
                            }
                        </script>
                    </div>
                    <!--ICELOCK-->
                    <!--ICELock instruction-->
                    <div class="mt-5 d-flex justify-content-center">
                        <div class="col-6">
                            <p align="center" style="font-size:20px;">
                                Set idle timeout period.
                            </p>
                        </div>
                    </div>
                    <!--ICELock details-->
                    <div class="d-flex justify-content-center" style="margin-bottom:-30px;">
                        <div class="col-6 d-flex justify-content-center">
                            <div class="sub">
                                Duration:
                            </div>
                            <div class="value w-50">
                                1
                            </div>
                            <div class="min w-25">
                                min(s)
                            </div>
                        </div>
                    </div>
                    <!--ICELock slider-->
                    <div class="col-12 d-flex justify-content-center">
                        <div class="length range__slider" data-min="4" data-max="32">
                            <input type="range" min="1" max="30" step="1" value="1" id="timeSlider">
                        </div>
                    </div>
                    <script type="text/javascript">
                        //range selector
                        //get initial value
                        window.onload = function initialVal() {
                            var initialValue = document.querySelector('#timeSlider')
                            var target = document.querySelector('.value');
                            target.innerHTML = initialValue.value;
                        }
                        //update value
                        var elem = document.querySelector('#timeSlider');
                        rangeValue = function () {
                            var newValue = elem.value;
                            var target = document.querySelector('.value');
                            target.innerHTML = newValue;
                        }
                        elem.addEventListener("input", rangeValue);
                        // Range Slider Properties.
                        // Fill : The trailing color that you see when you drag the slider.
                        // background : Default Range Slider Background
                        const sliderProps = {
                            fill: "#9d205d",
                            background: "rgba(255, 255, 255, 0.214)",
                        };

                        // Selecting the Range Slider container which will effect the LENGTH property of the password.
                        const slider = document.querySelector(".range__slider");

                        // Text which will show the value of the range slider.
                        const sliderValue = document.querySelector("#timeSlider");

                        // Using Event Listener to apply the fill and also change the value of the text.
                        slider.querySelector("input").addEventListener("input", event => {
                            sliderValue.setAttribute("data-length", event.target.value);
                            applyFill(event.target);
                        });
                        // Selecting the range input and passing it in the applyFill func.
                        applyFill(slider.querySelector("input"));
                        // This function is responsible to create the trailing color and setting the fill.
                        function applyFill(slider) {
                            const percentage = (100 * (slider.value - slider.min)) / (slider.max - slider.min);
                            const bg = `linear-gradient(90deg, ${sliderProps.fill} ${percentage}%, ${sliderProps.background} ${percentage +
                                0.1}%)`;
                            slider.style.background = bg;
                            sliderValue.setAttribute("data-length", slider.value);
                        }

                    </script>

                    <!--Enter button-->
                    <div class="d-flex justify-content-center">
                        <div style="margin-top:25px" class="d-flex justify-content-center col-xl-5 col-lg-12 mb-2 ">
                            <button class="btn btn-outline-secondary rounded-0" onclick="PINreg()" aria-pressed="true" id="mainbtn">
                                ENTER →
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
    <script type="text/javascript">
        window.onload = function () {
            setTimeout(function () {
                document.body.removeChild(modal);
                loading.style.display = "none";
            }, 800);
        };
    </script>
</body>
</html>
<script type="text/javascript">

     function PINreg() {
        var entryPIN = $('#floatingPIN').val();
        var entryREPEATPIN = $('#floatingREPEATPIN').val();
        var sliderTIMEOUT = document.getElementById("timeSlider");
        var PIN = document.getElementById('floatingPIN');
        var REPIN = document.getElementById('floatingREPEATPIN');

        var data = {
            regPIN: entryPIN,
            regREPEATPIN: entryREPEATPIN,
            regTIMEOUT: sliderTIMEOUT.value
        }

        
        //Checks if PIN input is null
        if (!PIN.value.trim() && !REPIN.value.trim()) {
            //error alert
            Swal.fire({
                position: 'center',
                icon: 'error',
                iconColor: '#c40f2d',
                background: '#1a1a1a',
                title: 'PIN input is required!',
                showConfirmButton: false,
                timer: 2500
            })
        }
        //Checks if PIN input is < 4
        else if (PIN.value.length < 4 || REPIN.value.length < 4) {
            //error alert
            Swal.fire({
                position: 'center',
                icon: 'error',
                iconColor: '#c40f2d',
                background: '#1a1a1a',
                title: 'PIN must be at least 4 digits long!',
                showConfirmButton: false,
                timer: 2500
            })
        }
        //Checks if PIN matches
        else if (PIN.value != REPIN.value) {
            //error alert
            Swal.fire({
                position: 'center',
                icon: 'error',
                iconColor: '#c40f2d',
                background: '#1a1a1a',
                title: 'PIN does not match!',
                showConfirmButton: false,
                timer: 2500
            })
        }
        //Success alert
        else {
        $.ajax({
            type: "POST",
            url: "/PINRegistration/RegisterPIN",
            dataType: "JSON",
            data: JSON.stringify(data),
            contentType: 'application/json; charset=utf8',
            success: function (data) {
                if (data.success) {
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        background: '#1a1a1a',
                        iconColor: '#70cc72',
                        title: 'Successfully registered!',
                        showConfirmButton: false,
                        timer: 2500
                    })
                    .then(function () {
                        var url = '@Url.Action("Index","Dashboard")';
                        window.location.href = url;
                    }
                    )
                }
                else {
                    location.reload(true);
                }
            },
            error: function () {
                alert("An error occurred (AJAX)")
            }
        })
        }

     }
</script>